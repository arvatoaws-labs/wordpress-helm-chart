apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "wordpress.fullname" . }}-cron
  labels:
{{ include "wordpress.labels" . | indent 4 }}
  annotations:
    {{- if .Values.wordpress.uptime }}
    downscaler/uptime: {{.Values.wordpress.uptime}}
    {{- end }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  schedule: "{{ .Values.wordpress.cron_schedule }}"
  concurrencyPolicy: Replace
  startingDeadlineSeconds: 1800
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "wordpress.name" . }}-cron
            app.kubernetes.io/instance: {{ .Release.Name }}
          {{- if .Values.podLabels }}
            ## Custom pod labels
            {{- range $key, $value := .Values.podLabels }}
            {{ $key }}: {{ $value | quote }}
            {{- end }}
          {{- end }}
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
          {{- if .Values.podAnnotations }}
            ## Custom pod annotations
            {{- range $key, $value := .Values.podAnnotations }}
            {{ $key }}: {{ $value | quote }}
            {{- end }}
          {{- end }}
        spec:
          containers:
          - name: wordpress-cron
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            workingDir: /app
            command:
            - /scripts/run-cron.sh
            env:
            - name: MYSQL_HOST
              value: {{ $.Values.externalDatabase.host | quote }}
            - name: MYSQL_PORT
              value: {{ $.Values.externalDatabase.port | quote }}
            - name: MYSQL_DATABASE
              value: {{ $.Values.externalDatabase.database | quote }}
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "wordpress.fullname" $ }}
                  key: db-username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "wordpress.fullname" $ }}
                  key: db-password
            - name: WP_OFFLOAD_BUCKET
              value: {{ .Values.offload.bucket | quote }}
            - name: WP_OFFLOAD_REGION
              value: {{ .Values.offload.region | quote }}
            - name: WP_OFFLOAD_DOMAIN
              value: {{ .Values.offload.domain | quote }}
            - name: WP_OFFLOAD_CLOUDFRONT
              value: {{ .Values.offload.cloudfront | quote }}
            - name: WP_OFFLOAD_LOCAL_DOMAINS
              value: {{ .Values.offload.local_domains | quote }}
            - name: WP_DEFAULT_HOST
              value: {{ index .Values.ingress.hosts 0 "host" | quote }}
            - name: WP_PLUGINS
              value: {{ join " " .Values.plugins | quote }}
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 12 }}
{{- end }}
            volumeMounts:
            - mountPath: /etc/php/7.2/fpm/php-fpm.conf
              name: config-volume
              subPath: fpm.conf
            - mountPath: /etc/php/7.2/fpm/pool.d/www.conf
              name: config-volume
              subPath: fpm-pool.conf
            - mountPath: /app/wp-config.php
              name: config-volume
              subPath: wp-config.php
            resources:
{{ toYaml .Values.php.resources | indent 14 }}
          restartPolicy: OnFailure
          volumes:
          - name: config-volume
            configMap:
              # Provide the name of the ConfigMap containing the files you want
              # to add to the container
              name: {{ include "wordpress.fullname" . }}
